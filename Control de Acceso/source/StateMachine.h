/**
 * @file
 * This header file declares the function to create one instance of the StateMachine state machine.
 * The state machine is configured with a set of function pointers representing the non-default
 * actions and guards of the state machine. Some of these functions may also be declared in
 * this header file in accordance with the configuration of the state machine in the FW Profile
 * Editor. In the latter case, the user has to provide an implementation for these functions
 * in a user-supplied body file.
 *
 * This header file has been automatically generated by the FW Profile Editor.
 * The state machine created by this file is shown in the figure below.
 * @image html StateMachine.png
 *
 * @author FW Profile code generator version 5.01
 * @date Created on: Sep 7 2018 12:44:5
 */

/** Make sure to include this header file only once */
#ifndef STATEMACHINE_H_
#define STATEMACHINE_H_

/** FW Profile function definitions */
#include "FwSmConstants.h"

/** State identifiers */
#define StateMachine_COUNTDOWN (1)		/* The identifier of state COUNTDOWN in State Machine StateMachine */
#define StateMachine_DOOR_OPENED (2)		/* The identifier of state DOOR_OPENED in State Machine StateMachine */
#define StateMachine_ID_INPUT (3)		/* The identifier of state ID_INPUT in State Machine StateMachine */
#define StateMachine_MENU (4)		/* The identifier of state MENU in State Machine StateMachine */
#define StateMachine_MENU_ID_INPUT (5)		/* The identifier of state MENU_ID_INPUT in State Machine StateMachine */
#define StateMachine_PASSWORD_INPUT (6)		/* The identifier of state PASSWORD_INPUT in State Machine StateMachine */
#define StateMachine_PASSWORD_INPUT_1 (7)		/* The identifier of state PASSWORD_INPUT_1 in State Machine StateMachine */
#define StateMachine_PASSWORD_INPUT_2 (8)		/* The identifier of state PASSWORD_INPUT_2 in State Machine StateMachine */
#define StateMachine_IDLE (1)		/* The identifier of state IDLE in State Machine StateMachine */
#define StateMachine_RUNNING (2)		/* The identifier of state RUNNING in State Machine StateMachine */
#define StateMachine_SET_BRIGHTNESS (3)		/* The identifier of state SET_BRIGHTNESS in State Machine StateMachine */

/** User-defined includes */
#include "StateMachineFunctions.h" // Y SmActions.h incluye a SmData.h

/** The identifiers of transition commands (triggers) */
#define Execute (0)
#define NUMBER (18)
#define TIMEOUT (5)
#define SET_BRIGHTNESS (19)
#define KEY_2 (28)
#define CARD (21)
#define RESET (25)
#define KEY_1 (29)
#define LOGIN (31)

/**
 * Create a new state machine descriptor.
 * This interface creates the state machine descriptor statically.
 * It creates a single static instance of the state machine.
 * The function should only be called once.
 * If it is called several times, it always reconfigures and returns the same instance.
 * @param smData the pointer to the state machine data.
 * A value of NULL is legal (note that the default value of the pointer
 * to the state machine data when the state machine is created is NULL).
 * @return the pointer to the state machine descriptor
 */
FwSmDesc_t StateMachineCreate(void* smData);

/**
 * Guard on the transition from CHOICE1 to Final State.
 * Else
 * @param smDesc the state machine descriptor
 * @return 1 if the guard is fulfilled, otherwise 0.
 */
FwSmBool_t Guard2(FwSmDesc_t smDesc);

/**
 * Guard on the transition from CHOICE2 to PASSWORD_INPUT.
 * Else
 * @param smDesc the state machine descriptor
 * @return 1 if the guard is fulfilled, otherwise 0.
 */
FwSmBool_t Guard3(FwSmDesc_t smDesc);

#endif /* StateMachine_H_ */